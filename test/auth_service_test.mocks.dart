// Mocks generated by Mockito 5.4.6 from annotations
// in everyday_christian/test/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:everyday_christian/core/database/database_helper.dart' as _i7;
import 'package:everyday_christian/features/auth/services/biometric_service.dart'
    as _i3;
import 'package:everyday_christian/features/auth/services/secure_storage_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStorageHealthCheck_0 extends _i1.SmartFake
    implements _i2.StorageHealthCheck {
  _FakeStorageHealthCheck_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBiometricSettings_1 extends _i1.SmartFake
    implements _i3.BiometricSettings {
  _FakeBiometricSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_2 extends _i1.SmartFake implements _i4.Database {
  _FakeDatabase_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i2.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> storeUserData(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeUserData,
          [userData],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<void> storeUserCredentials(
    String? email,
    String? passwordHash,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeUserCredentials,
          [
            email,
            passwordHash,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getStoredPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getStoredPassword,
          [email],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<Map<String, dynamic>?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<void> setBiometricEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setBiometricEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> isBiometricEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricEnabled,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> setLastLogin() => (super.noSuchMethod(
        Invocation.method(
          #setLastLogin,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getLastLogin() => (super.noSuchMethod(
        Invocation.method(
          #getLastLogin,
          [],
        ),
        returnValue: _i5.Future<DateTime?>.value(),
      ) as _i5.Future<DateTime?>);

  @override
  _i5.Future<void> storeSessionToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #storeSessionToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getSessionToken() => (super.noSuchMethod(
        Invocation.method(
          #getSessionToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearUserData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearCredentials() => (super.noSuchMethod(
        Invocation.method(
          #clearCredentials,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> hasUserData() => (super.noSuchMethod(
        Invocation.method(
          #hasUserData,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> hasCredentials() => (super.noSuchMethod(
        Invocation.method(
          #hasCredentials,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<String>> getAllKeys() => (super.noSuchMethod(
        Invocation.method(
          #getAllKeys,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i2.StorageHealthCheck> checkHealth() => (super.noSuchMethod(
        Invocation.method(
          #checkHealth,
          [],
        ),
        returnValue:
            _i5.Future<_i2.StorageHealthCheck>.value(_FakeStorageHealthCheck_0(
          this,
          Invocation.method(
            #checkHealth,
            [],
          ),
        )),
      ) as _i5.Future<_i2.StorageHealthCheck>);

  @override
  _i5.Future<String?> exportData() => (super.noSuchMethod(
        Invocation.method(
          #exportData,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> importData(String? encryptedData) => (super.noSuchMethod(
        Invocation.method(
          #importData,
          [encryptedData],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [BiometricService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricService extends _i1.Mock implements _i3.BiometricService {
  MockBiometricService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> canCheckBiometrics() => (super.noSuchMethod(
        Invocation.method(
          #canCheckBiometrics,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<List<_i3.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i5.Future<List<_i3.BiometricType>>.value(<_i3.BiometricType>[]),
      ) as _i5.Future<List<_i3.BiometricType>>);

  @override
  _i5.Future<bool> authenticate({
    String? localizedFallbackTitle = 'Use PIN',
    String? androidSignInTitle = 'Biometric Authentication',
    String? androidCancelButton = 'Cancel',
    String? androidGoToSettingsDescription =
        'Please set up biometric authentication',
    bool? biometricOnly = false,
    bool? stickyAuth = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
          {
            #localizedFallbackTitle: localizedFallbackTitle,
            #androidSignInTitle: androidSignInTitle,
            #androidCancelButton: androidCancelButton,
            #androidGoToSettingsDescription: androidGoToSettingsDescription,
            #biometricOnly: biometricOnly,
            #stickyAuth: stickyAuth,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> isStrongBiometricSupported() => (super.noSuchMethod(
        Invocation.method(
          #isStrongBiometricSupported,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> stopAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #stopAuthentication,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.BiometricSettings> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue:
            _i5.Future<_i3.BiometricSettings>.value(_FakeBiometricSettings_1(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
      ) as _i5.Future<_i3.BiometricSettings>);

  @override
  _i5.Future<String> getBiometricDescription() => (super.noSuchMethod(
        Invocation.method(
          #getBiometricDescription,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getBiometricDescription,
            [],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i7.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i4.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i4.Database>.value(_FakeDatabase_2(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i4.Database>);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteDatabase() => (super.noSuchMethod(
        Invocation.method(
          #deleteDatabase,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> resetDatabase() => (super.noSuchMethod(
        Invocation.method(
          #resetDatabase,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> insertVerse(Map<String, dynamic>? verse) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertVerse,
          [verse],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<Map<String, dynamic>?> getVerse(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getVerse,
          [id],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<List<Map<String, dynamic>>> searchVerses({
    String? query,
    List<String>? themes,
    String? translation,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchVerses,
          [],
          {
            #query: query,
            #themes: themes,
            #translation: translation,
            #limit: limit,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getVersesByTheme(
    String? theme, {
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVersesByTheme,
          [theme],
          {#limit: limit},
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<Map<String, dynamic>?> getRandomVerse({List<String>? themes}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRandomVerse,
          [],
          {#themes: themes},
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<int> insertChatMessage(Map<String, dynamic>? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertChatMessage,
          [message],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getChatMessages({
    String? sessionId,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatMessages,
          [],
          {
            #sessionId: sessionId,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<int> deleteOldChatMessages(int? days) => (super.noSuchMethod(
        Invocation.method(
          #deleteOldChatMessages,
          [days],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> insertPrayerRequest(Map<String, dynamic>? prayer) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertPrayerRequest,
          [prayer],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> updatePrayerRequest(
    String? id,
    Map<String, dynamic>? prayer,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePrayerRequest,
          [
            id,
            prayer,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getPrayerRequests({
    String? status,
    String? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrayerRequests,
          [],
          {
            #status: status,
            #category: category,
          },
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> setSetting(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSetting,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T?> getSetting<T>(
    String? key, {
    T? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);

  @override
  _i5.Future<int> deleteSetting(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteSetting,
          [key],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> getDatabaseSize() => (super.noSuchMethod(
        Invocation.method(
          #getDatabaseSize,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<String> exportDatabase() => (super.noSuchMethod(
        Invocation.method(
          #exportDatabase,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #exportDatabase,
            [],
          ),
        )),
      ) as _i5.Future<String>);
}
